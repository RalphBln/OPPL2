/* Generated By:JJTree&JavaCC: Do not edit this line. PatternParserConstants.java */
package org.coode.patterns.syntax;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface PatternParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 7;
  /** RegularExpression Id. */
  int DECIMAL_LITERAL = 8;
  /** RegularExpression Id. */
  int HEX_LITERAL = 9;
  /** RegularExpression Id. */
  int OCTAL_LITERAL = 10;
  /** RegularExpression Id. */
  int END = 11;
  /** RegularExpression Id. */
  int ACTIONTOKENS = 12;
  /** RegularExpression Id. */
  int OPPLFUNCTION = 13;
  /** RegularExpression Id. */
  int OTHERDIRECTION = 14;
  /** RegularExpression Id. */
  int SUPERCLASSOF = 15;
  /** RegularExpression Id. */
  int SUPER_PROPERTY_OF = 16;
  /** RegularExpression Id. */
  int INSTANCE_OF = 17;
  /** RegularExpression Id. */
  int VARIABLENAME = 18;
  /** RegularExpression Id. */
  int VARIABLETYPE = 19;
  /** RegularExpression Id. */
  int PATTERNREFERENCEVARIABLE = 20;
  /** RegularExpression Id. */
  int RENDERINGVARIABLEATTRIBUTE = 21;
  /** RegularExpression Id. */
  int VALUESVARIABLEATTRIBUTE = 22;
  /** RegularExpression Id. */
  int GROUPSVARIABLEATTRIBUTE = 23;
  /** RegularExpression Id. */
  int RETURN = 24;
  /** RegularExpression Id. */
  int IDENTIFIER = 25;
  /** RegularExpression Id. */
  int CREATEDIDENTIFIER = 26;
  /** RegularExpression Id. */
  int LETTER = 27;
  /** RegularExpression Id. */
  int DIGIT = 28;
  /** RegularExpression Id. */
  int COMMA = 29;
  /** RegularExpression Id. */
  int SEMICOLON = 30;
  /** RegularExpression Id. */
  int COLON = 31;
  /** RegularExpression Id. */
  int OPENPARENTHESYS = 32;
  /** RegularExpression Id. */
  int CLOSEDPARENTHESYS = 33;
  /** RegularExpression Id. */
  int QUOTE = 34;
  /** RegularExpression Id. */
  int POWER = 35;
  /** RegularExpression Id. */
  int DOT = 36;
  /** RegularExpression Id. */
  int PLUS = 37;
  /** RegularExpression Id. */
  int OPENCURLYBRACKETS = 38;
  /** RegularExpression Id. */
  int CLOSEDCURLYBRACKETS = 39;
  /** RegularExpression Id. */
  int OPENSQUAREBRACKETS = 40;
  /** RegularExpression Id. */
  int CLOSEDSQUAREBRACKETS = 41;
  /** RegularExpression Id. */
  int EQUALS = 42;
  /** RegularExpression Id. */
  int THISCLASS = 43;
  /** RegularExpression Id. */
  int DOLLAR = 44;
  /** RegularExpression Id. */
  int CREATESYMBOL = 45;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "<END>",
    "<ACTIONTOKENS>",
    "<OPPLFUNCTION>",
    "<OTHERDIRECTION>",
    "<SUPERCLASSOF>",
    "<SUPER_PROPERTY_OF>",
    "<INSTANCE_OF>",
    "<VARIABLENAME>",
    "<VARIABLETYPE>",
    "<PATTERNREFERENCEVARIABLE>",
    "\"RENDERING\"",
    "\"VALUES\"",
    "\"GROUPS\"",
    "<RETURN>",
    "<IDENTIFIER>",
    "<CREATEDIDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "\",\"",
    "\";\"",
    "\":\"",
    "\"(\"",
    "\")\"",
    "\"\\\"\"",
    "\"^\"",
    "\".\"",
    "\"+\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"=\"",
    "\"$thisClass\"",
    "\"$\"",
    "\"!\"",
  };

}
